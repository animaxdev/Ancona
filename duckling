#!/usr/bin/env python3
##
# @brief Script used to automate the Ancona build process
#
# @author Jeff Swenson
#
# Use the -h flag for usage instructions

import os,sys,argparse

#We need to bootstrap the python path to include the Ancona build tools
#library
cmake_root = os.path.abspath(os.path.dirname(os.path.realpath(__file__)))
python_path = os.path.join(cmake_root,"BuildTools","Python")
sys.path.append(python_path)

from ild import get_depend,building,generate_mk_file
from ild.duckling import arg_parser,build_state,tasks,template

#Parse the command line arguments
user_instructions = arg_parser.parse()

duckling_tasks = tasks.Tasks(cmake_root)

if user_instructions.should_generate_documentation():
    duckling_tasks.generate_documentation()

if user_instructions.should_build():
    with build_state.BuildState(cmake_root, user_instructions) as state:
        if state.build_platform_changed():
            print("Cleaning build directory")
            state.update_build_platform()
            duckling_tasks.clean_build_directory()

        print("Duckling: Building for",user_instructions.get_build_platform())
        if user_instructions.get_build_platform() == "android":
            if not building.is_android_ndk_installed():
                print("Error: Failed to build ancona for Android")
                sys.exit(1)
            duckling_tasks.get_android_dependencies() 

        duckling_tasks.build_ancona(user_instructions.get_build_platform())
        
if user_instructions.get_run_target():
    print("Warning: -r is not yet implemented")

if user_instructions.should_template():
    template_args = user_instructions.get_template()
    template.start_template(template_args[0], template_args[1])
